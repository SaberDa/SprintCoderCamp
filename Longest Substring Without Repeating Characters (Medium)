Given a string, find the length of the longest substring without repeating characters.

Example 1:

Input: "abcabcbb"
Output: 3 
Explanation: The answer is "abc", with the length of 3. 

Example 2:

Input: "bbbbb"
Output: 1
Explanation: The answer is "b", with the length of 1.

Example 3:

Input: "pwwkew"
Output: 3
Explanation: The answer is "wke", with the length of 3. 
             Note that the answer must be a substring, "pwke" is a subsequence and not a substring.

class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        x = []
        y = []
        a = 0
        for i in s:
            y.append(i)
        while len(y) > 0:
            for i in y:
                if i in x:
                    break
                x.append(i)
            if len(x) > a:
                a = len(x)
            x = []
            del y[0]
        return a
