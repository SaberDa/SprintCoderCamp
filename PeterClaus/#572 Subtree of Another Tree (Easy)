Example 1:
Given tree s:

     3
    / \
   4   5
  / \
 1   2
Given tree t:
   4 
  / \
 1   2
Return true, because t has the same structure and node values with a subtree of s.

Example 2:
Given tree s:

     3
    / \
   4   5
  / \
 1   2
    /
   0
Given tree t:
   4
  / \
 1   2
Return false.

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    
    def Identical(self, A, B):
        if not A and not B:
            return True
        if A is None or B is None:
            return False
        return A.val == B.val and \
                self.Identical(A.left, B.left) and \
                self.Identical(A.right, B.right)

    def isSubtree(self, s: TreeNode, t: TreeNode) -> bool:
        if not s:
            return False
        if self.Identical(s, t):
            return True
        return self.isSubtree(s.left, t) or self.isSubtree(s.right, t)
